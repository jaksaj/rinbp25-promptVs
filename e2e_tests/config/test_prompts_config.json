{
  "prompt_group": {
    "name": "Generated Graph Test Prompts",
    "description": "Auto-generated graph prompts with 2 graphs and 5 questions each",
    "tags": [
      "graph",
      "algorithms",
      "generated",
      "testing"
    ]
  },
  "prompts": [
    {
      "name": "Graph BFS from D",
      "description": "Perform breadth-first search on a directed graph",
      "content": "You will be given a list of directed edges and an operation to perform.\nFor BFS, return only the nodes reached at the specified depth (not the starting node).\nFor parents, return only nodes with edges pointing to the given node (not the node itself).\nThe graph has the following edges:\nA -> B\nB -> C\nC -> D\nD -> E\nC -> B\nOperation:\nPerform a BFS from node D with depth 3.",
      "expected_solution": "[]",
      "tags": [
        "graph",
        "bfs",
        "algorithms"
      ]
    },
    {
      "name": "Find parents of D",
      "description": "Find all parent nodes of a given node",
      "content": "You will be given a list of directed edges and an operation to perform.\nFor BFS, return only the nodes reached at the specified depth (not the starting node).\nFor parents, return only nodes with edges pointing to the given node (not the node itself).\nThe graph has the following edges:\nA -> B\nB -> C\nC -> D\nD -> E\nC -> B\nOperation:\nFind all parent nodes of D.",
      "expected_solution": "['C']",
      "tags": [
        "graph",
        "parents",
        "algorithms"
      ]
    },
    {
      "name": "Reachable nodes from D",
      "description": "Find all nodes reachable from a given starting node",
      "content": "You will be given a list of directed edges and an operation to perform.\nFor reachable, return all nodes that can be reached from the starting node (not the starting node itself).\nThe graph has the following edges:\nA -> B\nB -> C\nC -> D\nD -> E\nC -> B\nOperation:\nFind all nodes reachable from D.",
      "expected_solution": "['E']",
      "tags": [
        "graph",
        "reachable",
        "algorithms"
      ]
    },
    {
      "name": "Graph BFS from D",
      "description": "Perform breadth-first search on a directed graph",
      "content": "You will be given a list of directed edges and an operation to perform.\nFor BFS, return only the nodes reached at the specified depth (not the starting node).\nFor parents, return only nodes with edges pointing to the given node (not the node itself).\nThe graph has the following edges:\nA -> B\nB -> C\nC -> D\nD -> E\nC -> B\nOperation:\nPerform a BFS from node D with depth 3.",
      "expected_solution": "[]",
      "tags": [
        "graph",
        "bfs",
        "algorithms"
      ]
    },
    {
      "name": "Find parents of E",
      "description": "Find all parent nodes of a given node",
      "content": "You will be given a list of directed edges and an operation to perform.\nFor BFS, return only the nodes reached at the specified depth (not the starting node).\nFor parents, return only nodes with edges pointing to the given node (not the node itself).\nThe graph has the following edges:\nA -> B\nB -> C\nC -> D\nD -> E\nC -> B\nOperation:\nFind all parent nodes of E.",
      "expected_solution": "['D']",
      "tags": [
        "graph",
        "parents",
        "algorithms"
      ]
    },
    {
      "name": "Graph BFS from F",
      "description": "Perform breadth-first search on a directed graph",
      "content": "You will be given a list of directed edges and an operation to perform.\nFor BFS, return only the nodes reached at the specified depth (not the starting node).\nFor parents, return only nodes with edges pointing to the given node (not the node itself).\nThe graph has the following edges:\nA -> B\nB -> C\nC -> D\nD -> E\nE -> F\nF -> G\nD -> A\nG -> B\nOperation:\nPerform a BFS from node F with depth 3.",
      "expected_solution": "['C']",
      "tags": [
        "graph",
        "bfs",
        "algorithms"
      ]
    },
    {
      "name": "Find parents of B",
      "description": "Find all parent nodes of a given node",
      "content": "You will be given a list of directed edges and an operation to perform.\nFor BFS, return only the nodes reached at the specified depth (not the starting node).\nFor parents, return only nodes with edges pointing to the given node (not the node itself).\nThe graph has the following edges:\nA -> B\nB -> C\nC -> D\nD -> E\nE -> F\nF -> G\nD -> A\nG -> B\nOperation:\nFind all parent nodes of B.",
      "expected_solution": "['A', 'G']",
      "tags": [
        "graph",
        "parents",
        "algorithms"
      ]
    },
    {
      "name": "Reachable nodes from G",
      "description": "Find all nodes reachable from a given starting node",
      "content": "You will be given a list of directed edges and an operation to perform.\nFor reachable, return all nodes that can be reached from the starting node (not the starting node itself).\nThe graph has the following edges:\nA -> B\nB -> C\nC -> D\nD -> E\nE -> F\nF -> G\nD -> A\nG -> B\nOperation:\nFind all nodes reachable from G.",
      "expected_solution": "['A', 'B', 'C', 'D', 'E', 'F']",
      "tags": [
        "graph",
        "reachable",
        "algorithms"
      ]
    },
    {
      "name": "Graph BFS from C",
      "description": "Perform breadth-first search on a directed graph",
      "content": "You will be given a list of directed edges and an operation to perform.\nFor BFS, return only the nodes reached at the specified depth (not the starting node).\nFor parents, return only nodes with edges pointing to the given node (not the node itself).\nThe graph has the following edges:\nA -> B\nB -> C\nC -> D\nD -> E\nE -> F\nF -> G\nD -> A\nG -> B\nOperation:\nPerform a BFS from node C with depth 1.",
      "expected_solution": "['D']",
      "tags": [
        "graph",
        "bfs",
        "algorithms"
      ]
    },
    {
      "name": "Find parents of B",
      "description": "Find all parent nodes of a given node",
      "content": "You will be given a list of directed edges and an operation to perform.\nFor BFS, return only the nodes reached at the specified depth (not the starting node).\nFor parents, return only nodes with edges pointing to the given node (not the node itself).\nThe graph has the following edges:\nA -> B\nB -> C\nC -> D\nD -> E\nE -> F\nF -> G\nD -> A\nG -> B\nOperation:\nFind all parent nodes of B.",
      "expected_solution": "['A', 'G']",
      "tags": [
        "graph",
        "parents",
        "algorithms"
      ]
    }
  ]
}